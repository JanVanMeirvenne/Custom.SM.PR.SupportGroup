<ManagementPackFragment SchemaVersion="SM2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Categories>
    
    <Category ID="VDW.SM.PR.FormCustomizations.ManagementPackCategory" Value="MESUC!Microsoft.SystemCenter.ManagementPack">
      <ManagementPackName>VDW.SM.PR.FormCustomizations</ManagementPackName>
      <ManagementPackVersion>1.0.0.0</ManagementPackVersion>
      <ManagementPackPublicKeyToken>6bd7dd9c936b3b55</ManagementPackPublicKeyToken>
    </Category>
  </Categories>
  <Presentation>
    <Forms>
		<!-- Specify a new form which will be 'grafted' on an existing form (baseform). We need to specify the projection-type (to let the form know which data should be retrieved) and the internal name of the form (smlets can help with finding this value: Get-SCSMForm|select typename)
      <Form ID="VDW.SM.PR.FormCustomizations.Form" Accessibility="Public" BaseForm="SPL!ServiceManager.ProblemManagement.Library.Form.Problem" Target="SPL!System.WorkItem.Problem.ProjectionType" TypeName="Microsoft.EnterpriseManagement.ServiceManager.Applications.ProblemManagement.Forms.ProblemForm">
        <Category>Form</Category>
        <Customization>
		<!-- We can either use the XML customization tag to add controls and modify properties -->
       <!--   <AddControl Parent="StackPanel106" Assembly="PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" Type="System.Windows.Controls.Label" Left="0" Top="0" Right="0" Bottom="0" Row="0" Column="0" /> -->
        <!--  <AddControl Parent="StackPanel106" Assembly="Microsoft.EnterpriseManagement.UI.SMControls, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" Type="Microsoft.EnterpriseManagement.UI.WpfControls.ListPicker" Left="0" Top="0" Right="0" Bottom="0" Row="0" Column="0" /> -->
          <!-- To hook-up the list-picker to our custom list and field, we need to sets it parentcategorid to the id of our list item (use smlets: Get-SCSMEnumeration), and bind it to our custom class property
          <!--<PropertyBindingChange Object="ListPicker_1" Property="SelectedItem">
            <NewBinding Enabled="True" Path="SupportGroup" Mode="TwoWay" BindsDirectlyToSource="False" UpdateSourceTrigger="PropertyChanged" />
          </PropertyBindingChange>
          <PropertyChange Object="ListPicker_1" Property="ParentCategoryId">
            <NewValue>e24ffbc7-78fd-a2da-e4b1-32312a8035ce</NewValue>
          </PropertyChange>
          <PropertyChange Object="ListPicker_1" Property="Width">
            <NewValue>Auto</NewValue>
          </PropertyChange>
          <PropertyChange Object="ListPicker_1" Property="Height">
            <NewValue>Auto</NewValue>
          </PropertyChange>
          <PropertyBindingChange Object="Label_1" Property="Content">
            <NewBinding Enabled="False" />
          </PropertyBindingChange>
          <PropertyChange Object="Label_1" Property="Content">
            <NewValue>Support Group:</NewValue>
          </PropertyChange>
          <PropertyChange Object="Label_1" Property="HorizontalAligment">
            <NewValue>Left</NewValue>
          </PropertyChange>
          <PropertyChange Object="Label_1" Property="MinWidth">
            <NewValue>100</NewValue>
          </PropertyChange> -->
		  <!-- A more flexible way (if you know your way around C#) is to configure the extra form controls in a custom usercontrol and add it -->
          <AddControl Parent="StackPanel106" Assembly="VDW.SM.PR.UserControlOverride, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Type="VDW.SM.PR.UserControlOverride.Override" Left="0" Top="0" Right="0" Bottom="0" Row="0" Column="0" />
        </Customization>
      </Form>
    </Forms>
  </Presentation>
  <Resources>
  <!-- We need to specify our custom user control assembly here so it can be accessed by the console -->
    <Assembly ID="VDW.SM.PR.FormCustomizations.Assembly" Accessibility="Public" FileName="VDW.SM.PR.UserControlOverride.dll" QualifiedName="VDW.SM.PR.UserControlOverride, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
  </Resources>
</ManagementPackFragment>
